<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beyond.mapper.BookMapper">
<cache readOnly="true" type="org.mybatis.caches.ehcache.EhcacheCache"></cache>
	<insert id="add" parameterType="book">
		<selectKey keyProperty="id" keyColumn="id" resultType="string"
			order="BEFORE">
			select replace(uuid(),'-','')
		</selectKey>
		insert into book (id, name, price,book_uri,cover_uri,book_count)
		values(#{id},#{name},#{price},#{bookUri},#{coverUri},#{count});
		<if test="author!=null">
			update book
			<set>
				author_id=#{author.id}
			</set>
			<where>
				id=#{id}
			</where>
			;
		</if>

		<if test="owner!=null">
			update book
			<set>
				owner_id=#{owner.id}
			</set>
			<where>
				id=#{id}
			</where>
			;
		</if>

		<if test="borrower!=null">
			update book
			<set>
				borrower_id=#{borrower.id}
			</set>
			<where>
				id=#{id}
			</where>
			;
		</if>
	</insert>

	<delete id="delete" parameterType="book">
		delete from book where id=#{id};
		delete from orderz where book_id=#{id};
	</delete>

	<update id="update" parameterType="book">
		<if test="name!=null">
			update book
			<set>
				name=#{name}
			</set>
			<where>
				id=#{id}
			</where>
			;
		</if>
		<if test="price!=null">
			update book
			<set>
				price=#{price}
			</set>
			<where>
				id=#{id}
			</where>
			;
		</if>
		
		<if test="bookUri!=null">
			update book
			<set>
				book_uri=#{bookUri}
			</set>
			<where>
				id=#{id}
			</where>
			;
		</if>
		<if test="coverUri!=null">
			update book
			<set>
				cover_uri=#{coverUri}
			</set>
			<where>
				id=#{id}
			</where>
			;
		</if>
		<if test="author!=null">
			update book
			<set>
				author_id=#{author.id}
			</set>
			<where>
				id=#{id}
			</where>
			;
		</if>
		<if test="owner!=null">
			update book
			<set>
				owner_id=#{owner.id}
			</set>
			<where>
				id=#{id}
			</where>
			;
		</if>
		<if test="borrower!=null">
			update book
			<set>
				borrower_id=#{borrower.id}
			</set>
			<where>
				id=#{id}
			</where>
			;
		</if>
		<if test="count!=null">
			update book
			<set>
				book_count=#{count}
			</set>
			<where>
				id=#{id}
			</where>
			;
		</if>

	</update>

	<resultMap type="book" id="bookResultMap">
		<result property="id" column="book_id" />
		<result property="name" column="book_name" />
		<result property="price" column="book_price" />
		<result property="bookUri" column="book_uri" />
		<result property="coverUri" column="book_cover_uri" />
		<result property="count" column="book_count" />
		<association property="author" javaType="author" select="com.beyond.mapper.AuthorMapper.selectById" column="author_id">
		</association>
		<association property="owner" javaType="user" select="com.beyond.mapper.UserMapper.selectById" column="owner_id">
		</association>
		<association property="borrower" javaType="user" select="com.beyond.mapper.UserMapper.selectById" column="borrower_id"></association>
		<collection property="orders" ofType="order"
			select="com.beyond.mapper.OrderMapper.selectByEitherBookId" column="book_id"></collection>
	</resultMap>
	<select id="selectById" parameterType="string" resultMap="bookResultMap">
		select
		b.id book_id,
		b.name book_name,
		b.price book_price,
		b.book_uri book_uri,
		b.cover_uri book_cover_uri,
		b.borrower_id borrower_id,
		b.owner_id  owner_id ,
		b.author_id author_id,
		b.book_count book_count
		from book b
		where b.id=#{id};
	</select>
	
	<select id="selectAll" resultMap="bookResultMap">
		select
		b.id book_id,
		b.name book_name,
		b.price book_price,
		b.book_uri book_uri,
		b.cover_uri book_cover_uri,
		b.borrower_id borrower_id,
		b.owner_id  owner_id ,
		b.author_id author_id,
		b.book_count book_count
		from book b
	</select>

	<select id="selectByOwnerId" parameterType="string" resultMap="bookResultMap">
	select
		b.id book_id,
		b.name book_name,
		b.price book_price,
		b.book_uri book_uri,
		b.cover_uri book_cover_uri,
		b.borrower_id borrower_id,
		b.owner_id  owner_id ,
		b.author_id author_id,
		b.book_count book_count
		from book b
		where b.owner_id=#{id};
	</select>
	
	<select id="selectByAuthorId" parameterType="string" resultMap="bookResultMap">
	select
		b.id book_id,
		b.name book_name,
		b.price book_price,
		b.book_uri book_uri,
		b.cover_uri book_cover_uri,
		b.borrower_id borrower_id,
		b.owner_id  owner_id ,
		b.author_id author_id,
		b.book_count book_count
		from book b
		where b.author_id=#{id};
	</select>
	
	<select id="selectByBorrowerId" parameterType="string" resultMap="bookResultMap">
	select
		b.id book_id,
		b.name book_name,
		b.price book_price,
		b.book_uri book_uri,
		b.cover_uri book_cover_uri,
		b.borrower_id borrower_id,
		b.owner_id  owner_id ,
		b.author_id author_id,
		b.book_count book_count
		from book b
		where b.borrower_id=#{id};
	</select>

	<select id="selectByExample" parameterType="book"
		resultMap="bookResultMap">
		select
		b.id book_id,
		b.name book_name,
		b.price book_price,
		b.book_uri book_uri,
		b.cover_uri book_cover_uri,
		b.borrower_id borrower_id,
		b.owner_id  owner_id ,
		b.author_id author_id,
		b.book_count book_count
		from book b
		<where>
			<if test="id!=null">
				and b.id=#{id}
			</if>
			<if test="name!=null">
				and b.name=#{name}
			</if>
			<if test="owner!=null and owner.id!=null">
				and b.owner_id=#{owner.id}
			</if>
		</where>
	</select>
	<select id="selectByExampleBlur" parameterType="book"
		resultMap="bookResultMap">
		select
		b.id book_id,
		b.name book_name,
		b.price book_price,
		b.book_uri book_uri,
		b.cover_uri book_cover_uri,
		b.borrower_id borrower_id,
		b.owner_id  owner_id ,
		b.author_id author_id,
		b.book_count book_count
		from book b
		<where>
			<if test="id!=null">
				and b.id=#{id}
			</if>
			<if test="name!=null">
				and b.name=#{name}
			</if>
			<if test="owner!=null">
				and b.owner_id=#{owner.id}
			</if>
		</where>
	</select>

	<update id="cancelBorrowBook" parameterType="string">
	update book set borrower_id=null where id=#{id};
	</update>
</mapper>